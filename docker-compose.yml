version: '3'

services:
  backend:
    restart: always
    build:
      context: .
    volumes:
      - .:/app
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      - redis

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis_data:/data

  celery:
    restart: always
    build:
      context: .
    command: celery -A EagleEye worker -n master_worker -E --beat --loglevel=debug --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis

  nginx:
    restart: always
    build:
      context: ./nginx
    volumes:
      - .:/app
    ports:
      - "80:80"
    depends_on:
      - backend
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # db:
  #   image: postgres:alpine
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data/
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=postgres
  #   ports:
  #     - "5432:5432"

volumes:
  pgdata:
  redis_data:
  rabbitmq_data:
